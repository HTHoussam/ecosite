/* eslint-disable no-undef */
import Cookies from 'js-cookie'
import { signOut, useSession } from 'next-auth/react'
import Head from 'next/head'
import Link from 'next/link'
import { useContext, useEffect, useState } from 'react'
import { ToastContainer } from 'react-toastify'
import 'react-toastify/dist/ReactToastify.css'
import { Store } from '../utils/store'
import UserMenu, { MenuItem } from './core/UserMenu'

const Layout = ({
	title,
	children,
}: {
	title?: string
	children: JSX.Element
}) => {
	const { state, dispatch } = useContext(Store)
	const { status, data: session } = useSession()
	const { cart } = state
	const [cartItemsCount, setCartItemsCount] = useState(0)
	useEffect(() => {
		setCartItemsCount(
			cart.cartItems.reduce((a: any, c: { quantity: any }) => a + c.quantity, 0)
		)
	}, [cart.cartItems])
	const userMenuItems: MenuItem[] = [
		{
			label: 'profile',
			href: '/profile',
			className: 'dropdown-link',
		},
		{
			label: 'order history',
			href: '/order-history',
			className: 'dropdown-link',
		},
		{
			label: 'signout',
			href: '',
			className: 'dropdown-link',
			callbackFn: () => {
				Cookies.remove('cart')
				dispatch({ type: 'CART_RESET' })
				signOut({ callbackUrl: '/login' })
			},
		},
	]
	return (
		<>
			<Head>
				<title>{title ? title : 'ecomsite'}</title>
				<meta name='description' content='Generated by create next app' />
				<meta name='viewport' content='width=device-width, initial-scale=1' />
				<link rel='icon' href='/favicon.ico' />
			</Head>
			<ToastContainer position='top-center' limit={1} />
			<div className='flex min-h-screen flex-col justify-between'>
				<header>
					<nav className='flex h-12 items-center px-4 justify-between shadow-md'>
						<Link href={'/'} className='text-lg font-bold'>
							EcomSite
						</Link>
						<div>
							<Link href={'/cart'} className='p-2'>
								Cart
								{cartItemsCount > 0 && (
									<span className='ml-1 rounded-full bg-red-600 px-2 oy-1 text-xs font-bold text-white'>
										{cartItemsCount}
									</span>
								)}
							</Link>
							{status === 'loading' ? (
								'Loading'
							) : session?.user ? (
								<UserMenu
									buttonLabel={session.user.name}
									menuItems={userMenuItems}
								/>
							) : (
								<Link href={'/login'}>Login</Link>
							)}
						</div>
					</nav>
				</header>
				<main className='container m-auto mt-4 px-4'>{children}</main>
				<footer className='flex h-10 justify-center items-center'>
					&copy; Copyright 2022,EcomSite
				</footer>
			</div>
		</>
	)
}
export default Layout
